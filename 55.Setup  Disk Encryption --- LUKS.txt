Setup  Disk Encryption ---> LUKS [ Linux Unified key Setup ]

Bit Locker in Windows ---> disk part ---> encrypt[ changing the data format it will be visible only if we have key ]


Luks 1 ---> we can retrieve key
Luks 2 ---> it will store in kernel

Package :- cryptsetup

[root@localhost ~]# rpm -qa | grep cryptsetup
cryptsetup-libs-2.3.7-7.el8.x86_64
cryptsetup-2.3.7-7.el8.x86_64
[root@localhost ~]# 

*************************************************************************************************

Step 1:- taken 2 X 5G disks

[root@localhost ~]# lsblk
NAME          MAJ:MIN RM SIZE RO TYPE MOUNTPOINT
sda             8:0    0   5G  0 disk 
sdb             8:16   0   5G  0 disk 
nvme0n1       259:0    0  30G  0 disk 
├─nvme0n1p1   259:1    0   1G  0 part /boot
└─nvme0n1p2   259:2    0  29G  0 part 
  ├─rhel-root 253:0    0  26G  0 lvm  /
  └─rhel-swap 253:1    0   3G  0 lvm  [SWAP]
[root@localhost ~]# 

------------------------------------------------------------------------------------------------------------------------------

Step 2:- Setup Luks FS


i) Need to create disk as luksformat & provide passphrase[password]

Syntax:-
cryptsetup luksFormat [disk]

[root@localhost ~]# cryptsetup luksFormat /dev/sdb 

WARNING!
========
This will overwrite data on /dev/sdb irrevocably.

Are you sure? (Type 'yes' in capital letters): YES
Enter passphrase for /dev/sdb: 
Verify passphrase: 

ii) Need to Open luks partition my rename

Syntax:-
cryptsetup luksOpen [disk] [name]

[root@localhost ~]# cryptsetup luksOpen /dev/sdb mydata
Enter passphrase for /dev/sdb: 
[root@localhost ~]# 


iii) now disk is showing Type is crypt

[root@localhost ~]# lsblk
NAME          MAJ:MIN RM SIZE RO TYPE  MOUNTPOINT
sda             8:0    0   5G  0 disk  
sdb             8:16   0   5G  0 disk  
└─mydata      253:2    0   5G  0 crypt 
nvme0n1       259:0    0  30G  0 disk  
├─nvme0n1p1   259:1    0   1G  0 part  /boot
└─nvme0n1p2   259:2    0  29G  0 part  
  ├─rhel-root 253:0    0  26G  0 lvm   /
  └─rhel-swap 253:1    0   3G  0 lvm   [SWAP]
----------------------------------------------------------------------------------------------------------------------------------


Step:- 3  to check Luks FS status

[root@localhost ~]# cryptsetup status mydata 
/dev/mapper/mydata is active.
  type:    LUKS2
  cipher:  aes-xts-plain64
  keysize: 512 bits
  key location: keyring
  device:  /dev/sdb
  sector size:  512
  offset:  32768 sectors
  size:    10452992 sectors
  mode:    read/write
[root@localhost ~]# 

[root@localhost ~]# ls -lthr /dev/mapper/mydata 
lrwxrwxrwx. 1 root root 7 Jun  7 09:49 /dev/mapper/mydata -> ../dm-2
[root@localhost ~]# 

-----------------------------------------------------------------------------------------------------------------------------------------

Step:-4  Formating FS & Mounting 


[root@localhost ~]# mkdir /mydata
[root@localhost ~]# mkfs -t ext4  /dev/mapper/mydata 
mke2fs 1.45.6 (20-Mar-2020)
Creating filesystem with 1306624 4k blocks and 327040 inodes
Filesystem UUID: b8c79d8d-88b4-47b2-84c0-582e15fa4da3
Superblock backups stored on blocks: 
	32768, 98304, 163840, 229376, 294912, 819200, 884736

Allocating group tables: done                            
Writing inode tables: done                            
Creating journal (16384 blocks): done
Writing superblocks and filesystem accounting information: done 

[root@localhost ~]# lsblk -f
NAME          FSTYPE      LABEL UUID                                   MOUNTPOINT
sda                                                                    
sdb           crypto_LUKS       3e8d5f57-4d3f-40cb-9217-f02a3b9f614a   
└─mydata      ext4              b8c79d8d-88b4-47b2-84c0-582e15fa4da3  

[root@localhost ~]# mount /dev/mapper/mydata /mydata/
[root@localhost ~]# df -hTP /mydata/
Filesystem         Type  Size  Used Avail Use% Mounted on
/dev/mapper/mydata ext4  4.9G   24K  4.6G   1% /mydata
[root@localhost ~]# 
 

--------------------------------------------------------------------------------------------------------------------------------------------
---------------------------------------------------------------------------------------------------------------------------------------------

Permanent  Mount Luks fs
===========================================================================
[directly permeant mount is not recommended for Luks fs

---> we will create a file of random  that will point to encrypted key

random file ---> encrypted key ---> disk mount ]

i) create random file to define passphrase key

[root@localhost ~]# dd if=/dev/urandom of=/tmp/crypt_file bs=4096 count=1
1+0 records in
1+0 records out
4096 bytes (4.1 kB, 4.0 KiB) copied, 9.5874e-05 s, 42.7 MB/s
[root@localhost ~]# ls -l /tmp/crypt_file 
-rw-r--r--. 1 root root 4096 Jun  7 10:39 /tmp/crypt_file
[root@localhost ~]# 

ii) changing file Permissions & moving file to /etc/ location

[root@localhost ~]# chmod 600 /tmp/crypt_file 
[root@localhost ~]# mv /tmp/crypt_file /etc/
[root@localhost ~]# ls -l /etc/crypt_file 
-rw-------. 1 root root 4096 Jun  7 10:39 /etc/crypt_file
[root@localhost ~]# 

iii) Defining file with Disk and Key


[root@localhost ~]# cryptsetup luksAddKey /dev/sdb /etc/crypt_file 
Enter any existing passphrase: 
[root@localhost ~]# 

iv) entry in /etc/crypttab

Syntax:-
[encrypt_disk_name] [disk_details] [encrypt_file_name]

[root@localhost ~]# cat /etc/crypttab 
mydata /dev/sdb /etc/crypt_file
[root@localhost ~]# 


v) define fstab 

[root@localhost ~]# cat /etc/fstab | grep data
/dev/mapper/mydata  /mydata  ext4 defaults  0  0
[root@localhost ~]#


vi) Mounting fs from fstab

[root@localhost ~]# mount -a
[root@localhost ~]# df -hTP /mydata/
Filesystem         Type  Size  Used Avail Use% Mounted on
/dev/mapper/mydata ext4  4.9G   24K  4.6G   1% /mydata
[root@localhost ~]# 


****************************************************************************************************
Storing data


we have given full permission. still the encrypted fs is Open so able to access by all users

[root@localhost ~]# chmod 777 /mydata/
[root@localhost ~]# cd /mydata/
[root@localhost mydata]# cal > cal.txt
[root@localhost mydata]# mkdir aa bb cc
[root@localhost mydata]# touch {1..10}.txt
[root@localhost mydata]# 


[root@localhost mydata]# su student
[student@localhost mydata]$ cat cal.txt 
      June 2024     
Su Mo Tu We Th Fr Sa
                   1
 2  3  4  5  6  7  8
 9 10 11 12 13 14 15
16 17 18 19 20 21 22
23 24 25 26 27 28 29
30                  
[student@localhost mydata]$ pwd
/mydata
[student@localhost mydata]$ 

*****************************************************************************************************
Closing the Luks FS


we can use below command to close the luks fs & then it won't show in fs
cryptsetup luksClose [fs_name]

[root@localhost ~]# umount /mydata 
[root@localhost ~]# cryptsetup  luksClose mydata 
[root@localhost ~]# lsblk
NAME          MAJ:MIN RM SIZE RO TYPE MOUNTPOINT
sda             8:0    0   5G  0 disk 
sdb             8:16   0   5G  0 disk 

*******************************************************************************************************

Open and remount

[root@localhost ~]# mount /dev/mapper/mydata /mydata/
mount: /mydata: special device /dev/mapper/mydata does not exist.



[root@localhost ~]# cryptsetup status mydata
/dev/mapper/mydata is inactive.

[root@localhost ~]# cryptsetup luksOpen /dev/sdb mydata
Enter passphrase for /dev/sdb: 

[root@localhost ~]# cryptsetup status mydata
/dev/mapper/mydata is active.
  type:    LUKS2
  cipher:  aes-xts-plain64
  keysize: 512 bits
  key location: keyring
  device:  /dev/sdb
  sector size:  512
  offset:  32768 sectors
  size:    10452992 sectors
  mode:    read/write
[root@localhost ~]# 
*******************************************************************************************************************
Change Passpharse Key for Luks FS


[root@localhost ~]# cryptsetup luksChangeKey /dev/sdb
Enter passphrase to be changed: 
Enter new passphrase: 
Verify passphrase: 
[root@localhost ~]# 

********************************************************************************************************************

Remove Key from Luks FS & Close FS


[root@localhost ~]# umount /mydata/
[root@localhost ~]# vim /etc/fstab
[root@localhost ~]# vim /etc/fstab
[root@localhost ~]# cryptsetup luksRemoveKey /dev/sdb 
Enter passphrase to be deleted: 
[root@localhost ~]# cryptsetup luksClose mydata 

*****************************************************************************************************************



Luks1 ---> recovery Method

[dmsetup table --showkeys  ---> it will show the key]

https://access.redhat.com/solutions/1543373




