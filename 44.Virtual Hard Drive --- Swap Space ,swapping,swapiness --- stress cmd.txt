Virtual Hard Drive ---> Swap Space , Swapping , Swapiness

===================================================================================================


Swap :-  Linux OS physical memory chunks of memory  ---> 1 chunks called Page

RAM occupying  Pages/chunks Hard disk  ---> Pre defined space  --> Copying
[ System can perform the task ]

1. system not having enough memory
2. System/program loads RAM occupying some chunks of memory  then after it's loads to Hard disk --->RAM will be freed

Swapping :- 

copying / paging ---> hard disk to RAM ---> swapping


Swapiness Parameter
********************************************************************************************************


Stress ---> we can import any kinda load on machine and test
 4types 
1. CPU
2. RAM
3. I/O
4. Disk 

Repo :-
dnf install https://dl.fedoraproject.org/pub/epel/epel-release-latest-8.noarch.rpm

Package :- 
stress

Installed Packages
stress.x86_64                                                   1.0.4-24.el8         

**************************************************************************************************************

1. CPU Load [--cpu]

Before :-

[root@localhost ~]# uptime
 07:15:31 up  5:37,  1 user,  load average: 0.23, 0.15, 0.10


CPU LOAD :-
[root@localhost ~]# stress --cpu 4 --timeout 20
stress: info: [120755] dispatching hogs: 4 cpu, 0 io, 0 vm, 0 hdd
stress: info: [120755] successful run completed in 20s

After:-

[root@localhost ~]#
[student@localhost ~]$ uptime
 07:16:15 up  5:38,  1 user,  load average: 1.08, 0.34, 0.16
[student@localhost ~]$ 

*******************************************************************************************************

2. Memory Load [ RAM + Swap] [-m]


[root@localhost ~]# free -m
              total        used        free      shared  buff/cache   available
Mem:           1806        1067         259          13         479         560
Swap:          3071         597        2474
[root@localhost ~]# stress -m 1 --vm-bytes 3G
stress: info: [120850] dispatching hogs: 0 cpu, 0 io, 1 vm, 0 hdd
stress: FAIL: [120850] (415) <-- worker 120851 got signal 9
stress: WARN: [120850] (417) now reaping child worker processes
stress: FAIL: [120850] (451) failed run completed in 13s
[root@localhost ~]# free -m
              total        used        free      shared  buff/cache   available
Mem:           1806         776         851           1         177         866
Swap:          3071         953        2118
[root@localhost ~]# 


[root@localhost ~]# cat /proc/sys/vm/swappiness 
50
[root@localhost ~]# echo 80 > /proc/sys/vm/swappiness 
[root@localhost ~]# cat /proc/sys/vm/swappiness 
80
[root@localhost ~]# stress -m 1 --vm-bytes 3G
stress: info: [120915] dispatching hogs: 0 cpu, 0 io, 1 vm, 0 hdd
stress: FAIL: [120915] (415) <-- worker 120916 got signal 9
stress: WARN: [120915] (417) now reaping child worker processes
stress: FAIL: [120915] (451) failed run completed in 17s
[root@localhost ~]# vmstat
procs -----------memory---------- ---swap-- -----io---- -system-- ------cpu-----
 r  b   swpd   free   buff  cache   si   so    bi    bo   in   cs us sy id wa st
 1  0 1029736 888808      0 185232   12   78   248   243   94  104  1  1 98  0  0
[root@localhost ~]# free -h
              total        used        free      shared  buff/cache   available
Mem:          1.8Gi       762Mi       857Mi       4.0Mi       185Mi       876Mi
Swap:         3.0Gi       1.0Gi       2.0Gi
[root@localhost ~]# 

*******************************************************************************************         
3. Input/Output  [--io]


Before :-
[root@localhost ~]# iostat
Linux 4.18.0-80.el8.x86_64 (localhost.localdomain) 	Saturday 11 May 2024 	_x86_64_	(4 CPU)

avg-cpu:  %user   %nice %system %iowait  %steal   %idle
           0.61    0.02    0.99    0.32    0.00   98.06

Device             tps    kB_read/s    kB_wrtn/s    kB_read    kB_wrtn
nvme0n1          53.35       919.22       943.91   20836268   21395782
dm-0             31.74       861.19       655.80   19520821   14865164
dm-1             75.95        50.40       280.39    1142396    6355668
loop0             0.01         0.09         0.01       2109        280


[root@localhost ~]# stress --io 60 -v --timeout 30
stress: info: [121786] dispatching hogs: 0 cpu, 60 io, 0 vm, 0 hdd
stress: dbug: [121786] using backoff sleep of 180000us
stress: dbug: [121786] setting timeout to 30s
stress: dbug: [121786] --> hogio worker 60 [121787] forked
stress: dbug: [121786] using backoff sleep of 177000us
stress: dbug: [121786] setting timeout to 30s
stress: dbug: [121786] --> hogio worker 59 [121788] forked
stress: dbug: [121786] using backoff sleep of 174000us
stress: dbug: [121786] setting timeout to 30s


After:-
vg-cpu:  %user   %nice %system %iowait  %steal   %idle
           0.23    0.00   99.77    0.00    0.00    0.00

Device             tps    kB_read/s    kB_wrtn/s    kB_read    kB_wrtn
nvme0n1           0.66        11.92         0.00         36          0
dm-0              0.66        11.92         0.00         36          0
dm-1              0.00         0.00         0.00          0          0
loop0             0.00         0.00         0.00          0          0

[student@localhost ~]$

===========================================================================================================


Use File as Block device


************************************************************

1. Need to create 1G file with dd with extension img

/dev/zero ---> provide zero data 

bs ---> block size [ read/write]
count ---> bs how many counts required [ size]

Size = bs X count



[root@localhost ~]# dd if=/dev/zero of=VHD.img bs=1M count=1200
1200+0 records in
1200+0 records out
1258291200 bytes (1.3 GB, 1.2 GiB) copied, 0.983254 s, 1.3 GB/s
[root@localhost ~]# 

************************************************************************

2.Format FS and mount it 

[root@localhost ~]# mkfs.ext4  VHD.img 
mke2fs 1.45.6 (20-Mar-2020)
Discarding device blocks: done                            
Creating filesystem with 307200 4k blocks and 76800 inodes
Filesystem UUID: 74a13130-ee63-4287-8719-23005a5a122f
Superblock backups stored on blocks: 
	32768, 98304, 163840, 229376, 294912

Allocating group tables: done                            
Writing inode tables: done                            
Creating journal (8192 blocks): done
Writing superblocks and filesystem accounting information: done 

[root@localhost ~]# blkid VHD.img
VHD.img: UUID="74a13130-ee63-4287-8719-23005a5a122f" BLOCK_SIZE="4096" TYPE="ext4"
[root@localhost ~]# mkdir /testdata


Below cmd used to mount disk image

[root@localhost ~]# mount -t auto -o loop VHD.img /testdata/
[root@localhost ~]# df -hT /dev/loop
df: /dev/loop: No such file or directory
[root@localhost ~]# df -hT /testdata
Filesystem     Type  Size  Used Avail Use% Mounted on
/dev/loop0     ext4  1.2G  3.6M  1.1G   1% /testdata
[root@localhost ~]# 

*********************************************************************************

3. Check able to store & Create files inside the FS

[root@localhost ~]# cd /testdata/
[root@localhost testdata]# touch test{1..20}.txt
[root@localhost testdata]# ls
lost+found  test11.txt  test13.txt  test15.txt  test17.txt  test19.txt  test20.txt  test3.txt  test5.txt  test7.txt  test9.txt
test10.txt  test12.txt  test14.txt  test16.txt  test18.txt  test1.txt   test2.txt   test4.txt  test6.txt  test8.txt
[root@localhost testdata]# cal >cal.txt
[root@localhost testdata]# mkdir aa bb cc dd
[root@localhost testdata]# ls
aa  cal.txt  dd          test10.txt  test12.txt  test14.txt  test16.txt  test18.txt  test1.txt   test2.txt  test4.txt  test6.txt  test8.txt
bb  cc       lost+found  test11.txt  test13.txt  test15.txt  test17.txt  test19.txt  test20.txt  test3.txt  test5.txt  test7.txt  test9.txt
[root@localhost testdata]# cd
[root@localhost ~]# 

**************************************************************************************
4.Permanent Mount


[root@localhost ~]# cat /etc/fstab | grep VHD
/VHD.img    /testdata ext4 defaults 0 0
[root@localhost ~]#
*****************************************************************************************

Remove this FS 

1. unmount the FS

[root@localhost ~]# umount /testdata/
[root@localhost ~]# rm VHD.img 
rm: remove regular file 'VHD.img'? y
[root@localhost ~]# 
***********************************************************************************************************

Comments:-

1. Why loop is required ?   ----> we are mounting  file using as block storage device loops are required

[root@localhost ~]# mount -t auto -o loop VHD.img /testdata/
    
-t auto ---> for type [ we used auto it will automount]

-o   ---> Option ---> loop [ if we use files as block storage device we need to user loop always]

                      

2.