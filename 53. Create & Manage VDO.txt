53. Create & Manage VDO [ virtual disk optimizer]

VDO ----> rhel 7+ ---> It's a block virtualization tech --> it will do de-duplication data  and compression facility with Thin Provisioning.

> Multiple locations having same file ---> unnecessary storage ---> data duplicasy
> VDO --->  store in one location used as reference in other location[ link] + It will compress at block level


=====================================================================================================

Pre Requisites :-

1. Below package needs to be available

Installed Packages
kmod-kvdo.x86_64                                                                6.2.8.7-92.el8                                                                 @rhel-8-for-x86_64-baseos-rpms
[root@localhost ~]#

[ Incase not available use below command

> yum install kmod-kvdo  -y 

package coming from baseos rpm repos please make sure to enable repo]

After package install kernel module getting error for library means we need to reboot ]


===========================================================================================================


1.  Start VDO service

[root@localhost ~]# systemctl start vdo
[root@localhost ~]# systemctl status vdo
● vdo.service - VDO volume services
   Loaded: loaded (/usr/lib/systemd/system/vdo.service; enabled; vendor preset: enabled)
   Active: active (exited) since Mon 2024-05-27 00:15:40 EDT; 10min ago
  Process: 973 ExecStart=/usr/bin/vdo start --all --confFile /etc/vdoconf.yml (code=exited, status=0/SUCCESS)
 Main PID: 973 (code=exited, status=0/SUCCESS)
    Tasks: 0 (limit: 10871)
   Memory: 0B
   CGroup: /system.slice/vdo.service

May 27 00:15:39 localhost.localdomain systemd[1]: Starting VDO volume services...
May 27 00:15:40 localhost.localdomain systemd[1]: Started VDO volume services.

***************************************************************************************
2.  attach 2 X 10G disks

[root@localhost ~]# lsblk
NAME          MAJ:MIN RM SIZE RO TYPE MOUNTPOINT
sda             8:0    0  10G  0 disk 
sdb             8:16   0  10G  0 disk 
nvme0n1       259:0    0  30G  0 disk 
├─nvme0n1p1   259:1    0   1G  0 part /boot
└─nvme0n1p2   259:2    0  29G  0 part 
  ├─rhel-root 253:0    0  26G  0 lvm  /
  └─rhel-swap 253:1    0   3G  0 lvm  [SWAP]

***************************************************************************


3. we can create on  vdo on lvm or raw disk [ better create rawdisk]

syntax:- 
vdo create --name=[vdo_name] --device=[disk details] --vdoLogicalSize=[size]

[root@localhost ~]# vdo create --name=vdo1 --device=/dev/sda --vdoLogicalSize=300G
Creating VDO vdo1
      The VDO volume can address 6 GB in 3 data slabs, each 2 GB.
      It can grow to address at most 16 TB of physical storage in 8192 slabs.
      If a larger maximum size might be needed, use bigger slabs.
Starting VDO vdo1
Starting compression on VDO vdo1
VDO instance 0 volume is ready at /dev/mapper/vdo1
[root@localhost ~]# 

[root@localhost ~]# lsblk
NAME          MAJ:MIN RM  SIZE RO TYPE MOUNTPOINT
sda             8:0    0   10G  0 disk 
└─vdo1        253:2    0  300G  0 vdo  
sdb             8:16   0   10G  0 disk 
nvme0n1       259:0    0   30G  0 disk 
├─nvme0n1p1   259:1    0    1G  0 part /boot
└─nvme0n1p2   259:2    0   29G  0 part 
  ├─rhel-root 253:0    0   26G  0 lvm  /
  └─rhel-swap 253:1    0    3G  0 lvm  [SWAP]

**********************************************************************************************

4. to check vdo stats

[root@localhost ~]# vdostats --hu
Device                    Size      Used Available Use% Space saving%
/dev/mapper/vdo1         10.0G      4.0G      6.0G  40%           N/A
[root@localhost ~]# 


[root@localhost ~]# vdostats --verbose /dev/mapper/vdo1
/dev/mapper/vdo1 : 
  version                             : 31
  release version                     : 133524
  data blocks used                    : 0
  overhead blocks used                : 1049638
  logical blocks used                 : 0
  physical blocks                     : 2621440
  logical blocks                      : 78643200
  1K-blocks                           : 10485760
  1K-blocks used                      : 4198552
  1K-blocks available                 : 6287208
  used percent                        : 40
  saving percent                      : N/A
  block map cache size                : 134217728
  write policy                        : sync
  block size                          : 4096
  completed recovery count            : 0
  read-only recovery count            : 0
  operating mode                      : normal
  recovery progress (%)               : N/A

*********************************************************************************************

5. Creating PV, VG

[root@localhost ~]# pvcreate /dev/mapper/vdo1 
  Physical volume "/dev/mapper/vdo1" successfully created.
[root@localhost ~]# pvdisplay /dev/mapper/vdo1 
  "/dev/mapper/vdo1" is a new physical volume of "300.00 GiB"
  --- NEW Physical volume ---
  PV Name               /dev/mapper/vdo1
  VG Name               
  PV Size               300.00 GiB
  Allocatable           NO
  PE Size               0   
  Total PE              0
  Free PE               0
  Allocated PE          0
  PV UUID               btycfC-E4YU-rWWe-0q3H-PLnM-ocKc-ddp3Kv
   
[root@localhost ~]# vgcreate vdo1vg /dev/mapper/vdo1 
  Volume group "vdo1vg" successfully created
[root@localhost ~]# vgs
  VG     #PV #LV #SN Attr   VSize    VFree   
  rhel     1   2   0 wz--n-  <29.00g       0 
  vdo1vg   1   0   0 wz--n- <300.00g <300.00g
[root@localhost ~]# 

******************************************************************************

6. Creating Logical Volume


[root@localhost ~]# lvcreate -n vdo1v0l -L 50G vdo1vg
  Logical volume "vdo1v0l" created.
[root@localhost ~]# lvdisplay  /dev/vdo1vg/vdo1v0l 
  --- Logical volume ---
  LV Path                /dev/vdo1vg/vdo1v0l
  LV Name                vdo1v0l
  VG Name                vdo1vg
  LV UUID                m3TDVe-IO0y-xw3X-z5fw-58K1-jwaH-uRgeVh
  LV Write Access        read/write
  LV Creation host, time localhost.localdomain, 2024-05-27 00:36:31 -0400
  LV Status              available
  # open                 0
  LV Size                50.00 GiB
  Current LE             12800
  Segments               1
  Allocation             inherit
  Read ahead sectors     auto
  - currently set to     8192
  Block device           253:3
   
[root@localhost ~]# lvcreate -n vdo1v02 -L 50G vdo1vg
  Logical volume "vdo1v02" created.
[root@localhost ~]# lvs
  LV      VG     Attr       LSize   Pool Origin Data%  Meta%  Move Log Cpy%Sync Convert
  root    rhel   -wi-ao---- <26.00g                                                    
  swap    rhel   -wi-ao----   3.00g                                                    
  vdo1v02 vdo1vg -wi-a-----  50.00g                                                    
  vdo1v0l vdo1vg -wi-a-----  50.00g                                                    
[root@localhost ~]# 


*************************************************************************************

7. Formating FS

Thin Provisioned Volume ----> -k ---> while using FS and unused blocks. to ignore "-k" should not be used anymore

[root@localhost ~]# mkfs.ext4 -K /dev/vdo1vg/vdo1v0l
Warning: -K option is deprecated and should not be used anymore. Use '-E nodiscard' extended option instead!
mke2fs 1.45.6 (20-Mar-2020)
Creating filesystem with 13107200 4k blocks and 3276800 inodes
Filesystem UUID: e016ebfe-b90c-4e59-9fc8-e0d5b84d4bac
Superblock backups stored on blocks: 
	32768, 98304, 163840, 229376, 294912, 819200, 884736, 1605632, 2654208, 
	4096000, 7962624, 11239424

Allocating group tables: done                            
Writing inode tables: done                            
Creating journal (65536 blocks): done
Writing superblocks and filesystem accounting information: done   



fstrim like we are using for unused blocks

[root@localhost ~]# mkfs.xfs /dev/vdo1vg/vdo1v02 
meta-data=/dev/vdo1vg/vdo1v02    isize=512    agcount=4, agsize=3276800 blks
         =                       sectsz=4096  attr=2, projid32bit=1
         =                       crc=1        finobt=1, sparse=1, rmapbt=0
         =                       reflink=1    bigtime=0 inobtcount=0
data     =                       bsize=4096   blocks=13107200, imaxpct=25
         =                       sunit=0      swidth=0 blks
naming   =version 2              bsize=4096   ascii-ci=0, ftype=1
log      =internal log           bsize=4096   blocks=6400, version=2
         =                       sectsz=4096  sunit=1 blks, lazy-count=1
realtime =none                   extsz=4096   blocks=0, rtextents=0
Discarding blocks...
^C
[root@localhost ~]# mkfs.xfs -Kf /dev/vdo1vg/vdo1v02 
meta-data=/dev/vdo1vg/vdo1v02    isize=512    agcount=4, agsize=3276800 blks
         =                       sectsz=4096  attr=2, projid32bit=1
         =                       crc=1        finobt=1, sparse=1, rmapbt=0
         =                       reflink=1    bigtime=0 inobtcount=0
data     =                       bsize=4096   blocks=13107200, imaxpct=25
         =                       sunit=0      swidth=0 blks
naming   =version 2              bsize=4096   ascii-ci=0, ftype=1
log      =internal log           bsize=4096   blocks=6400, version=2
         =                       sectsz=4096  sunit=1 blks, lazy-count=1
realtime =none                   extsz=4096   blocks=0, rtextents=0
[root@localhost ~]# 

**************************************************************************************
8. mount with discard option for VDO 

[root@localhost ~]# mkdir -p /data/v01
[root@localhost ~]# mkdir -p /data/v02
[root@localhost ~]# mount -o discard /dev/vdo1vg/vdo1v0l /data/lv01
mount: /data/lv01: mount point does not exist.
[root@localhost ~]# mount -o discard /dev/vdo1vg/vdo1v0l /data/v01
[root@localhost ~]# mount -o discard /dev/vdo1vg/vdo1v02 /data/v02

VDO is trying to save 99% of space

[root@localhost ~]# vdostats --hu
Device                    Size      Used Available Use% Space saving%
/dev/mapper/vdo1         10.0G      4.0G      6.0G  40%           99%
[root@localhost ~]# 

*********************************************************************************
9.Puting some duplicate data of sbin in v01 and v02 VDO


[root@localhost ~]# cd /data/v01/
[root@localhost v01]# touch  {1..10}
[root@localhost v01]# cal > cal.txt
[root@localhost v01]# cp /usr/sbin/* .
[root@localhost v01]# cd ../v02/
[root@localhost v02]# pwd
/data/v02
[root@localhost v02]# cp /usr/sbin/* .

******************************************************************************************

10.It showing 96% cause it using as reference in another fs

[root@localhost v02]# vdostats --hu
Device                    Size      Used Available Use% Space saving%
/dev/mapper/vdo1         10.0G      4.1G      5.9G  40%           96%

*********************************************************************************************
11. Extending VDO lv 

[root@localhost v02]# lvs
  LV      VG     Attr       LSize   Pool Origin Data%  Meta%  Move Log Cpy%Sync Convert
  root    rhel   -wi-ao---- <26.00g                                                    
  swap    rhel   -wi-ao----   3.00g                                                    
  vdo1v02 vdo1vg -wi-ao----  50.00g                                                    
  vdo1v0l vdo1vg -wi-ao----  50.00g                                                    

[root@localhost v02]# lvextend -L 100G /dev/vdo1vg/vdo1v0l
  Size of logical volume vdo1vg/vdo1v0l changed from 50.00 GiB (12800 extents) to 100.00 GiB (25600 extents).
  Logical volume vdo1vg/vdo1v0l successfully resized.

[root@localhost v02]# resize2fs /dev/vdo1vg/vdo1v0l 
resize2fs 1.45.6 (20-Mar-2020)
Filesystem at /dev/vdo1vg/vdo1v0l is mounted on /data/v01; on-line resizing required
old_desc_blocks = 7, new_desc_blocks = 13
The filesystem on /dev/vdo1vg/vdo1v0l is now 26214400 (4k) blocks long.


[root@localhost v02]# lvs
  LV      VG     Attr       LSize   Pool Origin Data%  Meta%  Move Log Cpy%Sync Convert
  root    rhel   -wi-ao---- <26.00g                                                    
  swap    rhel   -wi-ao----   3.00g                                                    
  vdo1v02 vdo1vg -wi-ao----  50.00g                                                    
  vdo1v0l vdo1vg -wi-ao---- 100.00g   
                                                 
[root@localhost v02]# vdostats --hu
Device                    Size      Used Available Use% Space saving%
/dev/mapper/vdo1         10.0G      4.1G      5.9G  40%           97%
[root@localhost v02]# 
**************************************************************************************************************************